# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: installTF
  displayName: Install latest version of Terraform
  jobs:
  - job: installTF
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'
- stage: initTF
  displayName: Initialize Terraform
  jobs:
  - job: initTF
    steps:
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Azure Pass - Sponsorship(90a5d9e6-2339-480b-a3c4-8cfb8440db35)'
        backendAzureRmResourceGroupName: 'cloud-shell-storage-centralindia'
        backendAzureRmStorageAccountName: 'csg10032000c8336f24'
        backendAzureRmContainerName: 'tff'
        backendAzureRmKey: 'terraform.tfstate'
- stage: planTF
  displayName: Plan Terraform
  jobs:
  - job: planTF
    steps:
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'Azure Pass - Sponsorship(90a5d9e6-2339-480b-a3c4-8cfb8440db35)'
- stage: applyTF
  displayName: Apply Terraform
  jobs:
  - job: applyTF
    steps:
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceNameAzureRM: 'Azure Pass - Sponsorship(90a5d9e6-2339-480b-a3c4-8cfb8440db35)'